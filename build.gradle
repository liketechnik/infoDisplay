/*
 * Copyright (C) 2016-2017  Florian Warzecha <flowa2000@gmail.com>
 *
 * This file is part of infoDisplay.
 *
 * infoDisplay is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * infoDisplay is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * infoDisplay uses TelegramBots Java API <https://github.com/rubenlagus/TelegramBots> by Ruben Bermudez.
 * TelegramBots API is licensed under GNU General Public License version 3 <https://www.gnu.org/licenses/gpl-3.0.de.html>.
 *
 * infoDisplay uses parts of the Apache Commons project <https://commons.apache.org/>.
 * Apache commons is licensed under the Apache License Version 2.0 <http://www.apache.org/licenses/>.
 *
 * infoDisplay uses vlcj library <http://capricasoftware.co.uk/#/projects/vlcj>.
 * vlcj is licensed under GNU General Public License version 3 <https://www.gnu.org/licenses/gpl-3.0.de.html>.
 *
 * Thanks to all the people who contributed to the projects that make this
 * program possible.
 */

buildscript {
    // version of kotlin to user
    ext.kotlin_version = '1.1.2-2'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.13"
    }
}

    // source clear gradle plugin
    plugins {
        id "com.srcclr.gradle" version "2.2.0"
    }


allprojects {
    group 'liketechnik'

    version '2.0.0'

    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'application'

    sourceCompatibility = 1.8

    srcclr {
        apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NjkyNCwiZXhwIjoxNTExODkxMDUzLCJhdXRob3JpdGllcyI6IkFHRU5UIiwianRpIjoiMDg0MGRkZjQtZTJhNS00YTRiLWIxOGQtZmFjZGQ5NDMyZWI4IiwiY2xpZW50X2lkIjoiIiwic2NvcGUiOltdfQ.P_pcL-kkDsQ3Qj3hDhIz4wZC98-KHA4kQNYtcIxERjmM0ah48tH9FjUq3GycC0d-pGhLNy5S5Y_EJjgGe4IkbMq_0Ic8S28u1TpYODl-mFW55mbWO4C762QBwsIWIFOSmkazUsQPTHipdwTeqGDpi_Z33nl2bQAO9kQpvra3ee8'
    }



    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'

        compile 'org.apache.commons:commons-configuration2:2.1.1'

        compile 'org.apache.commons:commons-lang3:3.5'
        compile 'commons-logging:commons-logging:1..1.1'
        compile 'commons-beanutils:commons-beanutils:1.9.3'
        compile 'commons-codec:commons-codec:1.10'
        compile 'commons-jxpath:commons-jxpath:1.3'

        compile 'org.apache.commons:commons-jexl:2.1.1'
        compile 'org.apache.commons:commons-vfs2-project:2.1'
        compile 'xml-resolver:xml-resolver:1.2'

        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    }
}

project(':display') {
    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }
    mainClassName = "liketechnik.InfoDisplay.Display"
    dependencies {
        compile project(':config')
        compile project(':displayFile')
        compile 'com.github.caprica:vlcj:vlcj-3.10.+'
        compile 'ch.qos.logback:logback-classic:1.2.3'
    }
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "README.md"
        into ""
    }
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "LICENSE-**"
        into "LICENSES"
    }

    task dokkaJavadocDev(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/development/display"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/development/display/src/main"
            suffix = "#L"
        }
    }

    task dokkaJavadocStable(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/stable/display"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/stable/bot/src/main"
            suffix = "#L"
        }
    }
}

project(':bot') {
    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }
    mainClassName = "org.telegram.bot.Main"
    dependencies {
        compile group: 'org.telegram', name: 'telegrambots', version: '3.0'
        compile project(':config')
    }
    // include readme
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "README.md"
        into ""
    }
    // include licenses
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "LICENSE-**"
        into "LICENSES"
    }
    // include changelog
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "CHANGELOG.md"
        into ""
    }

    task createStopScript(type: CreateStartScripts) {
        mainClassName = "stopBot"
        applicationName = "stopBot"
        outputDir = new File(project.buildDir, 'scripts')
        classpath = jar.outputs.files + project.configurations.runtime
        unixStartScriptGenerator.template = resources.text.fromFile('stopBotUnixStartScript.txt')
        windowsStartScriptGenerator.template = resources.text.fromFile('stopBotWindowsStartScript.txt')
    }

    applicationDistribution.into("bin") {
        from(createStopScript)
        fileMode = 0755
    }

    task dokkaJavadocDev(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/development/bot"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/development/bot/src/main"
            suffix = "#L"
        }
    }

    task dokkaJavadocStable(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/stable/bot"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/stable/bot/src/main"
            suffix = "#L"
        }
    }
}

project(':displayFile') {
    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }
    mainClassName = ""
    dependencies {
        compile project(':config')
    }

    task dokkaJavadocDev(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/development/displayFile"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/development/displayFile/src/main"
            suffix = "#L"
        }
    }

    task dokkaJavadocStable(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/stable/displayFile"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/stable/displayFile/src/main"
            suffix = "#L"
        }
    }
}

project(':config') {
    sourceSets {
        main.kotlin.srcDirs += 'src/main/kotlin'
        main.java.srcDirs += 'src/main/java'
    }
    mainClassName = ""

    task dokkaJavadocDev(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/development/config"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/development/config/src/main"
            suffix = "#L"
        }
    }

    task dokkaJavadocStable(type: org.jetbrains.dokka.gradle.DokkaTask) {
        outputFormat = 'html'
        outputDirectory = "$rootProject.projectDir/docs/stable/config"

        jdkVersion = 8

        skipEmptyPackages = false

        linkMapping {
            dir = "src/main/"
            url = "https://github.com/liketechnik/infoDisplay/blob/stable/config/src/main"
            suffix = "#L"
        }
    }
}


mainClassName = ""
