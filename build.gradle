/*
 * Copyright (C) 2016-2017  Florian Warzecha <flowa2000@gmail.com>
 *
 * This file is part of infoDisplay.
 *
 * infoDisplay is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * infoDisplay is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * infoDisplay uses TelegramBots Java API <https://github.com/rubenlagus/TelegramBots> by Ruben Bermudez.
 * TelegramBots API is licensed under GNU General Public License version 3 <https://www.gnu.org/licenses/gpl-3.0.de.html>.
 *
 * infoDisplay uses parts of the Apache Commons project <https://commons.apache.org/>.
 * Apache commons is licensed under the Apache License Version 2.0 <http://www.apache.org/licenses/>.
 *
 * infoDisplay uses vlcj library <http://capricasoftware.co.uk/#/projects/vlcj>.
 * vlcj is licensed under GNU General Public License version 3 <https://www.gnu.org/licenses/gpl-3.0.de.html>.
 *
 * Thanks to all the people who contributed to the projects that make this
 * program possible.
 */

//buildscript {
//    repositories {
//        maven {
//            url "https://plugins.gradle.org/m2/"
//        }
//    }
//}

    plugins {
        id "com.srcclr.gradle" version "2.2.0"
    }

allprojects {
    group 'liketechnik'

    version '1.2.3'

    //apply plugin: 'distribution'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'application'
//    apply plugin: "com.srcclr.gradle"

    sourceCompatibility = 1.8

    srcclr {
        apiToken = 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NjkyNCwiZXhwIjoxNTExODkxMDUzLCJhdXRob3JpdGllcyI6IkFHRU5UIiwianRpIjoiMDg0MGRkZjQtZTJhNS00YTRiLWIxOGQtZmFjZGQ5NDMyZWI4IiwiY2xpZW50X2lkIjoiIiwic2NvcGUiOltdfQ.P_pcL-kkDsQ3Qj3hDhIz4wZC98-KHA4kQNYtcIxERjmM0ah48tH9FjUq3GycC0d-pGhLNy5S5Y_EJjgGe4IkbMq_0Ic8S28u1TpYODl-mFW55mbWO4C762QBwsIWIFOSmkazUsQPTHipdwTeqGDpi_Z33nl2bQAO9kQpvra3ee8'
    }



    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'

        compile 'org.telegram:telegrambots:2.4.4.4'

        compile 'org.apache.commons:commons-configuration2:2.1'
        // runtime dependencies of commons-configuration
        compile 'org.apache.commons:commons-lang3:3.5'
        compile 'commons-logging:commons-logging:1..1.1'
        compile 'commons-beanutils:commons-beanutils:1.9.3'
        compile 'commons-codec:commons-codec:1.10'
        compile 'commons-jxpath:commons-jxpath:1.3'
        // compile dependencies
        compile 'org.apache.commons:commons-jexl:2.1.1'
        compile 'org.apache.commons:commons-vfs2-project:2.1'
        compile 'xml-resolver:xml-resolver:1.2'
    }

 //   ant.importBuild 'build.xml'

   // compileJava.mustRunAfter(updateDisplayFileClass)
    //compileJava.mustRunAfter(updateConfigClass)

    task getHomeDir {
        doLast {
            println gradle.gradleHomeDir
        }
    }

//    task copyReadme {
//        outputs.file new File(file(project(':bot').buildDir.parent).parent + "/README.md")
//        doLast {
//            copy {
//                from "README.md"
//                into file(project(':bot').buildDir.parent).parent
//            }
//        }
//    }

    task createDocs {
        def docs = file("$buildDir/docs")
        outputs.dir docs
        doLast {
            docs.mkdirs()
            new File(docs, "readme.txt").write("Read me!")
        }
    }

//    distributions {
//        infoDisplay {
//            baseName = 'display'
//            contents {
////                from jar
////                into('libs') {
////                    from {
////                        project(':config').getBuildDir().toString() + '/libs/config-' + project.getVersion().toString() + '.jar'
////                    }
////                }
////                into('README') {
////                    from file('README.md')
////                }
////                from 'README.md' {
////                    into ('')
////                }
//            }
//        }
//        bot {
//            baseName = 'bot'
//            contents {
////                from { project(':config').getBuildDir().toString() + '/libs/config-' + project.getVersion().toString() + '.jar' }
////                from jar
////                into('README') {
////                    from file('README.md')
////                }
////                from(jar) {
////                    into "README"
////                }
////                from (copyReadme) {
////                    into ""
////                }
//                from(createDocs) {
//                    into "docs"
//                }
//            }
//        }
//        config {
//            baseName = 'config'
//            contents {
////                from jar
//            }
//        }
//        displayFile {
//            baseName = 'displayFile'
//            contents {
////                from jar
//            }
//        }
//    }
}

project(':display') {
    mainClassName = "liketechnik.InfoDisplay.Display"
    dependencies {
        compile project(':config')
        compile project(':displayFile')
        compile 'com.github.caprica:vlcj:vlcj-3.10.+'
        compile 'ch.qos.logback:logback-classic:1.1.11'
    }
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "README.md"
        into ""
    }
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "LICENSE-**"
        into "LICENSES"
    }
}

project(':bot') {
    mainClassName = "org.telegram.bot.Main"
    dependencies {
        compile project(':config')
    }
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "README.md"
        into ""
    }
    applicationDistribution.from("${rootProject.projectDir}/") {
        include "LICENSE-**"
        into "LICENSES"
    }
}

project(':displayFile') {
    dependencies {
        compile project(':config')
    }
}

